{"version":3,"sources":["utils/endpoints.js","utils/api.js","Classes/Card.js","Classes/Deck.js","Classes/DeckBuilder.js","utils/initDB.js","utils/views.js","index.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["ENDPOINTS","INFO","CARD_BY_ID","CARDS_BY_CLASS","CARDS_BY_SET","CARDS_BY_TYPE","CARDS_BY_FACTION","CARDS_BY_QUALITY","CARDS_BY_RACE","MODIFIERS","IMG","RAPID_API_HOST","RAPID_API_KEY","getEndpoint","url","headers","Headers","append","response","fetch","method","ok","apiData","json","err","console","log","requestInfo","requestCardByCardId","cardId","card","pop","requestCardsByPlayerClass","playerClass","requestCardsByCardSet","cardSet","requestCardsByType","type","requestCardsByFaction","faction","requestCardsByRarity","rarity","requestCardsByRace","race","Card","constructor","_cardId","_cardSet","_type","_faction","_rarity","_race","_img","_buildImgUrl","_playerClass","_name","undefined","_cost","_attack","_health","_text","_flavor","_artist","_collectible","_elite","_locale","_infoCompleted","infoCompleted","img","image","name","cost","attack","health","text","flavor","artist","collectible","elite","locale","getAllProperties","info","Deck","_id","_uuidv4","_cards","replace","c","crypto","getRandomValues","Uint8Array","toString","id","cards","addCard","push","removeCard","filter","cardsInDeck","nCards","length","DeckBuilder","playerClasses","cardSets","types","factions","rarities","races","patch","_playerClasses","_cardSets","_types","_factions","_rarities","_races","_patch","_cardsCache","_cardsNoImageCache","_callsDone","_cardsShown","_decks","activeDeck","decks","_filtersObject","filtersApplied","firstFilter","_getBrowserInfo","JSON","parse","localStorage","getItem","browserDecks","browserCallsDone","browserCardsNoImageCache","browserCardsCache","forEach","newCard","deck","newDeck","find","setItem","stringify","removeItem","_rebuildCardsShownArray","filterKey","filterValue","filterWithCallDoneFound","Object","entries","k","v","call","newFiltersArray","splice","indexOf","unshift","someFilterApplied","cardsAlreadyGotFromCache","e","cardsRetrieved","cachedCard","_applyPlayerClassFilter","cardsByPlayerClass","_applyCardSetFilter","cardsByCardSet","_applyTypeFilter","cardsByType","_applyFactionFilter","cardsByFaction","_applyRarityFilter","cardsByRarity","_applyRaceFilter","cardsByRace","getCardByCardId","rawCard","collectibl","applyFilter","key","removeFilter","cardWithNoImg","getSelectors","arr","cardsShown","getDeck","addDeck","removeDeck","deckId","d","nCachedCards","initDB","db","classes","sets","qualities","drawFilters","selectors","select","document","createElement","classList","add","setAttribute","optionElement","textContent","appendChild","option","innerHTML","querySelector","bindFilterEvents","childNodes","selectId","dataset","identifier","addEventListener","event","cardsContainer","target","value","drawCards","noCardDiv","noCardImg","src","tyrande","noCardText","error","cardDiv","cardImg","removeChild","parentElement","cardsList","listElement","drawCardInfo","delContainer","del","createTextNode","getElementById","remove","drawDecks","decksContainer","titleDiv","title","createDeckButton","deckDiv","deckTitle","drawActiveDeck","insertBefore","contentEditable","substring","cardsInDeckContainer","deckFooter","backLink","cardInfoContainer","contentDiv","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","clear","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","message","stack","overlay","createErrorOverlay","body","stackTrace","innerText","getParents","modules","parents","dep","Array","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.e31bb0bc.js","sourceRoot":"..\\src","sourcesContent":["export const ENDPOINTS = {\r\n    /* RapidAPI Hearthstone endpoints */\r\n    INFO: 'https://omgvamp-hearthstone-v1.p.rapidapi.com/info',\r\n    CARD_BY_ID: 'https://omgvamp-hearthstone-v1.p.rapidapi.com/cards/',\r\n    CARDS_BY_CLASS: 'https://omgvamp-hearthstone-v1.p.rapidapi.com/cards/classes/',\r\n    CARDS_BY_SET: 'https://omgvamp-hearthstone-v1.p.rapidapi.com/cards/sets/',\r\n    CARDS_BY_TYPE: 'https://omgvamp-hearthstone-v1.p.rapidapi.com/cards/types/',\r\n    CARDS_BY_FACTION: 'https://omgvamp-hearthstone-v1.p.rapidapi.com/cards/factions/',\r\n    CARDS_BY_QUALITY: 'https://omgvamp-hearthstone-v1.p.rapidapi.com/cards/qualities/',\r\n    CARDS_BY_RACE: 'https://omgvamp-hearthstone-v1.p.rapidapi.com/cards/races/',\r\n\r\n    /* RapidAPI Hearthstone call options */\r\n    // MODIFIERS: '?collectible=1',\r\n    MODIFIERS: '',\r\n\r\n    /* hearthstonejson images endpoints */\r\n    IMG: 'https://art.hearthstonejson.com/v1/render/latest/enUS/256x/'\r\n};","import { ENDPOINTS } from './endpoints';\r\n\r\nconst RAPID_API_HOST = 'omgvamp-hearthstone-v1.p.rapidapi.com';\r\nconst RAPID_API_KEY = 'f6fe973a55mshb2cdb6e42332b71p1b12ccjsndf391a414a74';\r\n\r\n/*\r\n * To make calls to RapidAPI endpoints\r\n */\r\nasync function getEndpoint(url) {\r\n    const headers = new Headers();\r\n    headers.append('x-rapidapi-host', RAPID_API_HOST);\r\n    headers.append('x-rapidapi-key', RAPID_API_KEY);\r\n    try {\r\n        const response = await fetch(url + ENDPOINTS.MODIFIERS, { method: 'GET', headers });\r\n        if (response.ok) {\r\n            const apiData = await response.json();\r\n            return apiData;\r\n        } else {\r\n            return response.ok;\r\n        }\r\n    } catch (err) {\r\n        console.log('fetch failed', err);\r\n    }\r\n}\r\n\r\nexport async function requestInfo() {\r\n    return await getEndpoint(ENDPOINTS.INFO);\r\n}\r\n\r\nexport async function requestCardByCardId(cardId) {\r\n    const card = await getEndpoint(ENDPOINTS.CARD_BY_ID + cardId);\r\n    return card.pop();\r\n}\r\n\r\nexport async function requestCardsByPlayerClass(playerClass) {\r\n    return await getEndpoint(ENDPOINTS.CARDS_BY_CLASS + playerClass);\r\n}\r\n\r\nexport async function requestCardsByCardSet(cardSet) {\r\n    return await getEndpoint(ENDPOINTS.CARDS_BY_SET + cardSet);\r\n}\r\n\r\nexport async function requestCardsByType(type) {\r\n    return await getEndpoint(ENDPOINTS.CARDS_BY_TYPE + type);\r\n}\r\n\r\nexport async function requestCardsByFaction(faction) {\r\n    return await getEndpoint(ENDPOINTS.CARDS_BY_FACTION + faction);\r\n}\r\n\r\nexport async function requestCardsByRarity(rarity) {\r\n    return await getEndpoint(ENDPOINTS.CARDS_BY_QUALITY + rarity);\r\n}\r\n\r\nexport async function requestCardsByRace(race) {\r\n    return await getEndpoint(ENDPOINTS.CARDS_BY_RACE + race);\r\n}","import { ENDPOINTS } from '../utils/endpoints';\r\n\r\nexport class Card {\r\n    constructor(cardId, cardSet, type, faction, rarity, race, playerClass) {\r\n        /* Basic attributes */\r\n        this._cardId = cardId;\r\n        this._cardSet = cardSet;\r\n        this._type = type;\r\n        this._faction = faction;\r\n        this._rarity = rarity;\r\n        this._race = race;\r\n        this._img = this._buildImgUrl(cardId);\r\n        this._playerClass = playerClass;\r\n\r\n        /* Extended attributes */\r\n        this._name = undefined;\r\n        this._cost = undefined;\r\n        this._attack = undefined;\r\n        this._health = undefined;\r\n        this._text = undefined;\r\n        this._flavor = undefined;\r\n        this._artist = undefined;\r\n        this._collectible = undefined;\r\n        this._elite = undefined;\r\n        this._locale = undefined;\r\n        this._infoCompleted = false;\r\n    }\r\n\r\n    /* Builds img url based into endpoint info */\r\n    _buildImgUrl(cardId) {\r\n        return ENDPOINTS.IMG + cardId + '.png';\r\n    }\r\n\r\n    /* returns boolean if the card has all fields */\r\n    get infoCompleted() {\r\n        return this._infoCompleted;\r\n    }\r\n\r\n    set infoCompleted(infoCompleted) {\r\n        this._infoCompleted = infoCompleted;\r\n    }\r\n\r\n    get cardId() {\r\n        return this._cardId;\r\n    }\r\n\r\n    // set cardId(cardId) {\r\n    //     this._cardId = cardId;\r\n    // }\r\n\r\n    get playerClass() {\r\n        return this._playerClass;\r\n    }\r\n\r\n    // set playerClass(playerClass) {\r\n    //     this._playerClass = playerClass;\r\n    // }\r\n\r\n    get cardSet() {\r\n        return this._cardSet;\r\n    }\r\n\r\n    // set cardSet(cardSet) {\r\n    //     this._cardSet = cardSet;\r\n    // }\r\n\r\n    get type() {\r\n        return this._type;\r\n    }\r\n\r\n    // set type(type) {\r\n    //     this._type = type;\r\n    // }\r\n\r\n    get faction() {\r\n        return this._faction;\r\n    }\r\n\r\n    set faction(faction) {\r\n        this._faction = faction;\r\n    }\r\n\r\n    get rarity() {\r\n        return this._rarity;\r\n    }\r\n\r\n    set rarity(rarity) {\r\n        this._rarity = rarity;\r\n    }\r\n\r\n    get race() {\r\n        return this._race;\r\n    }\r\n\r\n    set race(race) {\r\n        this._race = race;\r\n    }\r\n\r\n    get img() {\r\n        return this._img;\r\n    }\r\n\r\n    set img(image) {\r\n        this._img = image;\r\n    }\r\n\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    set name(name) {\r\n        this._name = name;\r\n    }\r\n\r\n    get cost() {\r\n        return this._cost;\r\n    }\r\n\r\n    set cost(cost) {\r\n        this._cost = cost;\r\n    }\r\n\r\n    get attack() {\r\n        return this._attack;\r\n    }\r\n\r\n    set attack(attack) {\r\n        this._attack = attack;\r\n    }\r\n\r\n    get health() {\r\n        return this._health;\r\n    }\r\n\r\n    set health(health) {\r\n        this._health = health;\r\n    }\r\n\r\n    get text() {\r\n        return this._text;\r\n    }\r\n\r\n    set text(text) {\r\n        this._text = text;\r\n    }\r\n\r\n    get flavor() {\r\n        return this._flavor;\r\n    }\r\n\r\n    set flavor(flavor) {\r\n        this._flavor = flavor;\r\n    }\r\n\r\n    get artist() {\r\n        return this._artist;\r\n    }\r\n\r\n    set artist(artist) {\r\n        this._artist = artist;\r\n    }\r\n\r\n    get collectible() {\r\n        return this._collectible;\r\n    }\r\n\r\n    set collectible(collectible) {\r\n        this._collectible = collectible;\r\n    }\r\n\r\n    get elite() {\r\n        return this._elite;\r\n    }\r\n\r\n    set elite(elite) {\r\n        this._elite = elite;\r\n    }\r\n\r\n    get locale() {\r\n        return this._locale;\r\n    }\r\n\r\n    set locale(locale) {\r\n        this._locale = locale;\r\n    }\r\n\r\n    /* returns an object with all properties that have some value */\r\n    getAllProperties() {\r\n        const info = {};\r\n        if (this._cardId) info['Card id'] = this._cardId;\r\n        if (this._playerClass) info['Player class'] = this._playerClass;\r\n        if (this._cardSet) info['Card set'] = this._cardSet;\r\n        if (this._type) info['Type'] = this._type;\r\n        if (this._faction) info['Faction'] = this._faction;\r\n        if (this._rarity) info['Rarity'] = this._rarity;\r\n        if (this._race) info['Race'] = this._race;\r\n\r\n        if (this._name) info['Name'] = this._name;\r\n        if (this._cost) info['Cost'] = this._cost;\r\n        if (this._attack) info['Attack'] = this._attack;\r\n        if (this._health) info['Health'] = this._health;\r\n        if (this._text) info['Text'] = this._text;\r\n        if (this._flavor) info['Flavor'] = this._flavor;\r\n        if (this._artist) info['Artist'] = this._artist;\r\n        if (this._elite) info['Elite'] = this._elite;\r\n\r\n        return info;\r\n    }\r\n}","export class Deck {\r\n    constructor() {\r\n        this._id = this._uuidv4();\r\n        this._name = 'New deck';\r\n        this._cards = [];\r\n    }\r\n\r\n    _uuidv4() {\r\n        return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\r\n            (c ^ (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))).toString(16)\r\n        );\r\n    }\r\n\r\n    get id() {\r\n        return this._id;\r\n    }\r\n\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    set name(name) {\r\n        this._name = name;\r\n    }\r\n\r\n    get cards() {\r\n        return this._cards;\r\n    }\r\n\r\n    addCard(card) {\r\n        this._cards.push(card);\r\n    }\r\n\r\n    removeCard(cardId) {\r\n        this._cards = this._cards.filter(cardsInDeck => cardsInDeck.cardId !== cardId);\r\n    }\r\n\r\n    get nCards() {\r\n        return this._cards.length;\r\n    }\r\n}","import {\r\n    requestCardByCardId,\r\n    requestCardsByPlayerClass,\r\n    requestCardsByCardSet,\r\n    requestCardsByType,\r\n    requestCardsByFaction,\r\n    requestCardsByRarity,\r\n    requestCardsByRace\r\n} from '../utils/api';\r\nimport { Card } from '../Classes/Card';\r\nimport { Deck } from './Deck';\r\n\r\nexport class DeckBuilder {\r\n    constructor(playerClasses, cardSets, types, factions, rarities, races, patch) {\r\n        /* To store the general info of the game (filters and patch) */\r\n        this._playerClasses = playerClasses;\r\n        this._cardSets = cardSets;\r\n        this._types = types;\r\n        this._factions = factions;\r\n        this._rarities = rarities;\r\n        this._races = races;\r\n        this._patch = patch;\r\n\r\n        /* Cards already pulled from endpoint and stored locally */\r\n        this._cardsCache = [];\r\n        this._cardsNoImageCache = []; // not used now but who knows...\r\n\r\n        /* To keep the calls already done to endpoints */\r\n        this._callsDone = {\r\n            cardId: [],\r\n            playerClass: [],\r\n            cardSet: [],\r\n            type: [],\r\n            faction: [],\r\n            rarity: [],\r\n            race: []\r\n        };\r\n\r\n        /* To store the cards shown in the middle of the screen */\r\n        this._cardsShown = [];\r\n\r\n        /* To store the cards that are included in the deck probably*/\r\n        this._decks = {\r\n            /* active deck */\r\n            activeDeck: undefined,\r\n            /* all decks */\r\n            decks: []\r\n        };\r\n\r\n        /* To keep track the filters aplied to cardsShown */\r\n        this._filtersObject = {\r\n            filtersApplied: {\r\n                playerClass: false,\r\n                cardSet: false,\r\n                type: false,\r\n                faction: false,\r\n                rarity: false,\r\n                race: false\r\n            },\r\n            /* first filter applied to avoid unnecessary calls */\r\n            firstFilter: undefined\r\n        };\r\n\r\n        /* retrieve info stored in browser if available */\r\n        this._getBrowserInfo();\r\n    }\r\n\r\n    /* retrieve info stored into the browser */\r\n    _getBrowserInfo() {\r\n        /* if we are in the same patch means nothing changed so we can retrieve info securely */\r\n        if (JSON.parse(localStorage.getItem('HearthstoneDeckBuilderPatch')) === this._patch) {\r\n            // console.log('Same patch, load resources from browser if any');\r\n            const browserDecks = JSON.parse(localStorage.getItem('HearthstoneDeckBuilderDecks'));\r\n            const browserCallsDone = JSON.parse(localStorage.getItem('HearthstoneDeckBuilderCallsDone'));\r\n            const browserCardsNoImageCache = JSON.parse(\r\n                localStorage.getItem('HearthstoneDeckBuilderCardsNoImageCache')\r\n            );\r\n            const browserCardsCache = JSON.parse(\r\n                localStorage.getItem('HearthstoneDeckBuilderCardsCache')\r\n            );\r\n\r\n            /* info about calls done and cached cards */\r\n            if (browserCallsDone && browserCardsCache && browserCardsNoImageCache) {\r\n                /* retrieve calls done */\r\n                this._callsDone = browserCallsDone;\r\n\r\n                /* retrieve cards cache, we have to create new objects because getters and setters are not saved */\r\n                browserCardsCache.forEach(card => {\r\n                    const newCard = new Card(\r\n                        card._cardId,\r\n                        card._cardSet,\r\n                        card._type,\r\n                        card._faction,\r\n                        card._rarity,\r\n                        card._race,\r\n                        card._playerClass\r\n                    );\r\n\r\n                    newCard.name = card._name;\r\n                    newCard.cost = card._cost;\r\n                    newCard.attack = card._attack;\r\n                    newCard.health = card._health;\r\n                    newCard.text = card._text;\r\n                    newCard.flavor = card._flavor;\r\n                    newCard.artist = card._artist;\r\n                    newCard.collectible = card._collectible;\r\n                    newCard.elite = card._elite;\r\n                    newCard.locale = card._locale;\r\n                    newCard.infoCompleted = card._infoCompleted;\r\n\r\n                    this._cardsCache.push(newCard);\r\n                });\r\n\r\n                /* same with cards without image */\r\n                browserCardsNoImageCache.forEach(card => {\r\n                    const newCard = new Card(\r\n                        card._cardId,\r\n                        card._cardSet,\r\n                        card._type,\r\n                        card._faction,\r\n                        card._rarity,\r\n                        card._race,\r\n                        card._playerClass\r\n                    );\r\n                    newCard.img = 'no-img-available';\r\n                    newCard.name = card._name;\r\n                    newCard.cost = card._cost;\r\n                    newCard.attack = card._attack;\r\n                    newCard.health = card._health;\r\n                    newCard.text = card._text;\r\n                    newCard.flavor = card._flavor;\r\n                    newCard.artist = card._artist;\r\n                    newCard.collectible = card._collectible;\r\n                    newCard.elite = card._elite;\r\n                    newCard.locale = card._locale;\r\n                    newCard.infoCompleted = card._infoCompleted;\r\n                    this._cardsNoImageCache.push(newCard);\r\n                });\r\n\r\n                /* if info about decks */\r\n                if (browserDecks) {\r\n                    /* for each deck get his info and create new Deck objects to populate this._decks object */\r\n                    for (const deck of browserDecks) {\r\n                        const newDeck = new Deck();\r\n                        newDeck.name = deck._name;\r\n                        for (const card of deck._cards) {\r\n                            const newCard = this._cardsCache.find(c => c.cardId === card._cardId);\r\n                            newDeck.addCard(newCard);\r\n                        }\r\n                        this._decks.decks.push(newDeck);\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            /* in case of new patch delete all old info */\r\n            localStorage.setItem('HearthstoneDeckBuilderPatch', JSON.stringify(this._patch));\r\n            localStorage.removeItem('HearthstoneDeckBuilderCallsDone');\r\n            localStorage.removeItem('HearthstoneDeckBuilderDecks');\r\n            localStorage.removeItem('HearthstoneDeckBuilderCardsNoImageCache');\r\n            localStorage.removeItem('HearthstoneDeckBuilderCardsCache');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Rebuild the cards shown array accordingly to the filters we have and the new filter applied\r\n     */\r\n    async _rebuildCardsShownArray(filterKey, filterValue) {\r\n        /* change the filter */\r\n        this._filtersObject.filtersApplied[filterKey] = filterValue;\r\n\r\n        /* change first filter  */\r\n        /* if no first filter means that first option in the chain was unset */\r\n        if (!this._filtersObject.firstFilter) {\r\n            let filterWithCallDoneFound = false;\r\n            /* in that case search for a new filter applied with a call to the API done */\r\n            Object.entries(this._filtersObject.filtersApplied).forEach(([k, v]) => {\r\n                /* if filter is different from the filter we are modifying or removing and has value (is applied) */\r\n                if (k !== filterKey && v !== false) {\r\n                    /* if no filter with call to the API found */\r\n                    if (!filterWithCallDoneFound) {\r\n                        /* set that filter as a first filter */\r\n                        this._filtersObject.firstFilter = k;\r\n                        /* if the filter has a call to the API done. Don't allow bucle to modifiy first filter anymore.\r\n                         * That means that the new chain of filters will start with a filter with a call to the API done\r\n                         * and it will be unnecessary do more calls to the API.\r\n                         * If filter with a call done is not found the call will be unavoidable*/\r\n                        if (this._callsDone[k].find(call => call === v)) filterWithCallDoneFound = true;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        /* reset the cardsshown array */\r\n        this._cardsShown = [];\r\n\r\n        /* if we have first filter proceed. In the case that first filter was undefined means that all filters are removed\r\n         * and no cards has to be shown */\r\n        if (this._filtersObject.firstFilter) {\r\n            /* get an array with all filters that have to be applied */\r\n            const newFiltersArray = Object.entries(this._filtersObject.filtersApplied).filter(\r\n                filter => filter[1] !== false\r\n            );\r\n\r\n            /* search in that array if some filter has his call to the API done. */\r\n            const filterWithCallDoneFound = newFiltersArray.find(\r\n                ([k]) => k === this._filtersObject.firstFilter\r\n            );\r\n\r\n            /* if some filter with call done is found put it in the begining of the array so\r\n             * the new filters chain starts with it. */\r\n            if (filterWithCallDoneFound) {\r\n                newFiltersArray.splice(newFiltersArray.indexOf(filterWithCallDoneFound), 1);\r\n                newFiltersArray.unshift(filterWithCallDoneFound);\r\n            }\r\n\r\n            if (newFiltersArray && this.someFilterApplied) {\r\n                let cardsAlreadyGotFromCache = false;\r\n                /* for each filter applied */\r\n                for (const filter of newFiltersArray) {\r\n                    const k = filter[0];\r\n                    const v = filter[1];\r\n\r\n                    if (v !== false) {\r\n                        /* if no cards shown and cards not get from cache for first time */\r\n                        if (this._cardsShown.length === 0 && !cardsAlreadyGotFromCache) {\r\n                            /* if call to the API not done make the call. This is necessary if we are removing the first filter and\r\n                             * the second one don't have the call done */\r\n                            if (!this._callsDone[k].find(e => e === v)) {\r\n                                let cardsRetrieved;\r\n                                /* make the call to the API */\r\n                                switch (k) {\r\n                                    case 'playerClass':\r\n                                        cardsRetrieved = await requestCardsByPlayerClass(v);\r\n                                        this._callsDone.playerClass.push(v);\r\n                                        break;\r\n                                    case 'cardSet':\r\n                                        cardsRetrieved = await requestCardsByCardSet(v);\r\n                                        this._callsDone.cardSet.push(v);\r\n                                        break;\r\n                                    case 'type':\r\n                                        cardsRetrieved = await requestCardsByType(v);\r\n                                        this._callsDone.type.push(v);\r\n                                        break;\r\n                                    case 'faction':\r\n                                        cardsRetrieved = await requestCardsByFaction(v);\r\n                                        this._callsDone.faction.push(v);\r\n                                        break;\r\n                                    case 'rarity':\r\n                                        cardsRetrieved = await requestCardsByRarity(v);\r\n                                        this._callsDone.rarity.push(v);\r\n                                        break;\r\n                                    case 'race':\r\n                                        cardsRetrieved = await requestCardsByRace(v);\r\n                                        this._callsDone.race.push(v);\r\n                                        break;\r\n                                }\r\n                                /* update the cache */\r\n                                if (cardsRetrieved) {\r\n                                    cardsRetrieved.forEach(e => {\r\n                                        const cachedCard = this._cardsCache.find(card => card.cardId === e.cardId);\r\n                                        if (!cachedCard) {\r\n                                            this._cardsCache.push(\r\n                                                new Card(\r\n                                                    e.cardId,\r\n                                                    e.cardSet,\r\n                                                    e.type,\r\n                                                    e.faction,\r\n                                                    e.rarity,\r\n                                                    e.race,\r\n                                                    e.playerClass\r\n                                                )\r\n                                            );\r\n                                        }\r\n                                    });\r\n                                }\r\n                                /* after call to API save info from cache and calls done */\r\n                                localStorage.setItem(\r\n                                    'HearthstoneDeckBuilderCallsDone',\r\n                                    JSON.stringify(this._callsDone)\r\n                                );\r\n                                localStorage.setItem(\r\n                                    'HearthstoneDeckBuilderCardsNoImageCache',\r\n                                    JSON.stringify(this._cardsNoImageCache)\r\n                                );\r\n                                localStorage.setItem(\r\n                                    'HearthstoneDeckBuilderCardsCache',\r\n                                    JSON.stringify(this._cardsCache)\r\n                                );\r\n                            }\r\n\r\n                            /* get the cards shown from cache */\r\n                            this._cardsShown = this._cardsCache.filter(c => c[k] === v);\r\n                            /* To prevent the case that some combination of filters result in an empty cardsShown array\r\n                             * and the program get cards from cardsCache again.\r\n                             */\r\n                            cardsAlreadyGotFromCache = true;\r\n                        } else {\r\n                            /* all secondary filters will come here to apply more filters to cards shown */\r\n                            this._cardsShown = this._cardsShown.filter(c => c[k] === v);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        //TO_DO\r\n        //this._cardsShown.sort();\r\n    }\r\n\r\n    /**\r\n     * Apply filter by player class to cards shown property of deck builder\r\n     */\r\n    async _applyPlayerClassFilter(playerClass) {\r\n        /* retrieve cards from endpoint and populate cache if not done earlier and if not first filter applied */\r\n        if (!this._callsDone.playerClass.find(e => e === playerClass) &&\r\n            !this._filtersObject.firstFilter\r\n        ) {\r\n            const cardsByPlayerClass = await requestCardsByPlayerClass(playerClass);\r\n            if (cardsByPlayerClass) {\r\n                cardsByPlayerClass.forEach(e => {\r\n                    const cachedCard = this._cardsCache.find(card => card.cardId === e.cardId);\r\n                    if (!cachedCard) {\r\n                        this._cardsCache.push(\r\n                            new Card(e.cardId, e.cardSet, e.type, e.faction, e.rarity, e.race, e.playerClass)\r\n                        );\r\n                    }\r\n                });\r\n            }\r\n            this._callsDone.playerClass.push(playerClass);\r\n        }\r\n\r\n        if (!this._filtersObject.firstFilter) this._filtersObject.firstFilter = 'playerClass';\r\n\r\n        /* rebuild the cards shown array */\r\n        await this._rebuildCardsShownArray('playerClass', playerClass);\r\n    }\r\n\r\n    /**\r\n     * Apply filter by card set to cards shown property of deck builder\r\n     */\r\n    async _applyCardSetFilter(cardSet) {\r\n        if (!this._callsDone.cardSet.find(e => e === cardSet) && !this._filtersObject.firstFilter) {\r\n            const cardsByCardSet = await requestCardsByCardSet(cardSet);\r\n            if (cardsByCardSet) {\r\n                cardsByCardSet.forEach(e => {\r\n                    const cachedCard = this._cardsCache.find(card => card.cardId === e.cardId);\r\n                    if (!cachedCard) {\r\n                        this._cardsCache.push(\r\n                            new Card(e.cardId, e.cardSet, e.type, e.faction, e.rarity, e.race, e.playerClass)\r\n                        );\r\n                    }\r\n                });\r\n            }\r\n\r\n            this._callsDone.cardSet.push(cardSet);\r\n        }\r\n\r\n        if (!this._filtersObject.firstFilter) this._filtersObject.firstFilter = 'cardSet';\r\n\r\n        /* rebuild the cards shown array */\r\n        await this._rebuildCardsShownArray('cardSet', cardSet);\r\n    }\r\n\r\n    /**\r\n     * Apply filter by type to cards shown property of deck builder\r\n     */\r\n    async _applyTypeFilter(type) {\r\n        if (!this._callsDone.type.find(e => e === type) && !this._filtersObject.firstFilter) {\r\n            const cardsByType = await requestCardsByType(type);\r\n            if (cardsByType) {\r\n                cardsByType.forEach(e => {\r\n                    const cachedCard = this._cardsCache.find(card => card.cardId === e.cardId);\r\n                    if (!cachedCard) {\r\n                        this._cardsCache.push(\r\n                            new Card(e.cardId, e.cardSet, e.type, e.faction, e.rarity, e.race, e.playerClass)\r\n                        );\r\n                    }\r\n                });\r\n            }\r\n\r\n            this._callsDone.type.push(type);\r\n        }\r\n\r\n        if (!this._filtersObject.firstFilter) this._filtersObject.firstFilter = 'type';\r\n\r\n        await this._rebuildCardsShownArray('type', type);\r\n    }\r\n\r\n    /**\r\n     * Apply filter by faction to cards shown property of deck builder\r\n     */\r\n    async _applyFactionFilter(faction) {\r\n        if (!this._callsDone.faction.find(e => e === faction) && !this._filtersObject.firstFilter) {\r\n            const cardsByFaction = await requestCardsByFaction(faction);\r\n\r\n            if (cardsByFaction) {\r\n                cardsByFaction.forEach(e => {\r\n                    const cachedCard = this._cardsCache.find(card => card.cardId === e.cardId);\r\n                    if (!cachedCard) {\r\n                        this._cardsCache.push(\r\n                            new Card(e.cardId, e.cardSet, e.type, e.faction, e.rarity, e.race, e.playerClass)\r\n                        );\r\n                    } else {\r\n                        this._cardsCache.find(c => c.cardId === cachedCard.cardId).faction = e.faction;\r\n                    }\r\n                });\r\n            }\r\n\r\n            this._callsDone.faction.push(faction);\r\n        }\r\n\r\n        if (!this._filtersObject.firstFilter) this._filtersObject.firstFilter = 'faction';\r\n\r\n        await this._rebuildCardsShownArray('faction', faction);\r\n    }\r\n\r\n    /**\r\n     * Apply filter by rarity to cards shown property of deck builder\r\n     */\r\n    async _applyRarityFilter(rarity) {\r\n        if (!this._callsDone.rarity.find(e => e === rarity) && !this._filtersObject.firstFilter) {\r\n            const cardsByRarity = await requestCardsByRarity(rarity);\r\n            if (cardsByRarity) {\r\n                cardsByRarity.forEach(e => {\r\n                    const cachedCard = this._cardsCache.find(card => card.cardId === e.cardId);\r\n                    if (!cachedCard) {\r\n                        this._cardsCache.push(\r\n                            new Card(e.cardId, e.cardSet, e.type, e.faction, e.rarity, e.race, e.playerClass)\r\n                        );\r\n                    } else {\r\n                        this._cardsCache.find(c => c.cardId === cachedCard.cardId).rarity = e.rarity;\r\n                    }\r\n                });\r\n            }\r\n\r\n            this._callsDone.rarity.push(rarity);\r\n        }\r\n\r\n        if (!this._filtersObject.firstFilter) this._filtersObject.firstFilter = 'rarity';\r\n\r\n        await this._rebuildCardsShownArray('rarity', rarity);\r\n    }\r\n\r\n    /**\r\n     * Apply filter by race to cards shown property of deck builder\r\n     */\r\n    async _applyRaceFilter(race) {\r\n        if (!this._callsDone.race.find(e => e === race) && !this._filtersObject.firstFilter) {\r\n            const cardsByRace = await requestCardsByRace(race);\r\n            if (cardsByRace) {\r\n                cardsByRace.forEach(e => {\r\n                    const cachedCard = this._cardsCache.find(card => card.cardId === e.cardId);\r\n                    if (!cachedCard) {\r\n                        this._cardsCache.push(\r\n                            new Card(e.cardId, e.cardSet, e.type, e.faction, e.rarity, e.race, e.playerClass)\r\n                        );\r\n                    } else {\r\n                        this._cardsCache.find(c => c.cardId === cachedCard.cardId).race = e.race;\r\n                    }\r\n                });\r\n            }\r\n\r\n            this._callsDone.race.push(race);\r\n        }\r\n\r\n        if (!this._filtersObject.firstFilter) this._filtersObject.firstFilter = 'race';\r\n        await this._rebuildCardsShownArray('race', race);\r\n    }\r\n\r\n    /* get just one card from API */\r\n    async getCardByCardId(cardId) {\r\n        const cachedCard = this._cardsCache.find(card => card.cardId === cardId);\r\n        if (cachedCard && cachedCard.infoCompleted) {\r\n            return cachedCard;\r\n        } else {\r\n            const rawCard = await requestCardByCardId(cardId);\r\n            if (rawCard) {\r\n                const cachedCard = this._cardsCache.find(card => card.cardId === rawCard.cardId);\r\n                /* if no cached card create new object */\r\n                if (!cachedCard) {\r\n                    const card = new Card(\r\n                        rawCard.cardId,\r\n                        rawCard.cardSet,\r\n                        rawCard.type,\r\n                        rawCard.faction,\r\n                        rawCard.rarity,\r\n                        rawCard.race,\r\n                        rawCard.playerClass\r\n                    );\r\n\r\n                    card.name = rawCard.name;\r\n                    card.cost = rawCard.cost;\r\n                    card.attack = rawCard.attack;\r\n                    card.health = rawCard.health;\r\n                    card.text = rawCard.text;\r\n                    card.flavor = rawCard.flavor;\r\n                    card.artist = rawCard.artist;\r\n                    card.collectible = rawCard.collectibl;\r\n                    card.elite = rawCard.elite;\r\n                    card.locale = rawCard.locale;\r\n                    card.infoCompleted = true;\r\n\r\n                    this._cardsCache.push(card);\r\n                    localStorage.setItem(\r\n                        'HearthstoneDeckBuilderCardsCache',\r\n                        JSON.stringify(this._cardsCache)\r\n                    );\r\n                    return card;\r\n                    /* if cached update element */\r\n                } else {\r\n                    cachedCard.faction = rawCard.faction;\r\n                    cachedCard.rarity = rawCard.rarity;\r\n                    cachedCard.race = rawCard.race;\r\n                    cachedCard.name = rawCard.name;\r\n                    cachedCard.cost = rawCard.cost;\r\n                    cachedCard.attack = rawCard.attack;\r\n                    cachedCard.health = rawCard.health;\r\n                    cachedCard.text = rawCard.text;\r\n                    cachedCard.flavor = rawCard.flavor;\r\n                    cachedCard.artist = rawCard.artist;\r\n                    cachedCard.collectible = rawCard.collectibl;\r\n                    cachedCard.elite = rawCard.elite;\r\n                    cachedCard.locale = rawCard.locale;\r\n                    cachedCard.infoCompleted = true;\r\n                    localStorage.setItem(\r\n                        'HearthstoneDeckBuilderCardsCache',\r\n                        JSON.stringify(this._cardsCache)\r\n                    );\r\n                    return cachedCard;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function to Apply filter  to cards shown property of deck builder\r\n     */\r\n    async applyFilter(key, filter) {\r\n        switch (key) {\r\n            case 'playerClass':\r\n                await this._applyPlayerClassFilter(filter);\r\n                break;\r\n            case 'cardSet':\r\n                await this._applyCardSetFilter(filter);\r\n                break;\r\n            case 'type':\r\n                await this._applyTypeFilter(filter);\r\n                break;\r\n            case 'faction':\r\n                await this._applyFactionFilter(filter);\r\n                break;\r\n            case 'rarity':\r\n                await this._applyRarityFilter(filter);\r\n                break;\r\n            case 'race':\r\n                await this._applyRaceFilter(filter);\r\n                break;\r\n            default:\r\n                return -1;\r\n        }\r\n\r\n        /* after apply filter save info from cache and calls done */\r\n        localStorage.setItem('HearthstoneDeckBuilderCallsDone', JSON.stringify(this._callsDone));\r\n        localStorage.setItem(\r\n            'HearthstoneDeckBuilderCardsNoImageCache',\r\n            JSON.stringify(this._cardsNoImageCache)\r\n        );\r\n        localStorage.setItem('HearthstoneDeckBuilderCardsCache', JSON.stringify(this._cardsCache));\r\n\r\n        return this._cardsShown;\r\n    }\r\n\r\n    /**\r\n     * Generic function to remove filter to cards shown property of deck builder\r\n     */\r\n    async removeFilter(filterKey) {\r\n        /* If filter applied */\r\n        if (this._filtersObject.filtersApplied[filterKey]) {\r\n            /* rebuild cards shown array */\r\n            if (this._filtersObject.firstFilter === filterKey) {\r\n                this._filtersObject.firstFilter = undefined;\r\n            }\r\n            await this._rebuildCardsShownArray(filterKey, false);\r\n        }\r\n    }\r\n\r\n    /* cards with no image are moved to the cards no image cache. Now it is unused but who knows.\r\n     * That function is launched when an image fires onerror event */\r\n    cardWithNoImg(cardWithNoImg) {\r\n        this._cardsShown = this._cardsShown.filter(card => card.cardId !== cardWithNoImg.cardId);\r\n        this._cardsCache = this._cardsCache.filter(card => card.cardId !== cardWithNoImg.cardId);\r\n        cardWithNoImg.img = 'no-img-available';\r\n        this._cardsNoImageCache.push(cardWithNoImg);\r\n        localStorage.setItem(\r\n            'HearthstoneDeckBuilderCardsNoImageCache',\r\n            JSON.stringify(this._cardsNoImageCache)\r\n        );\r\n        localStorage.setItem('HearthstoneDeckBuilderCardsCache', JSON.stringify(this._cardsCache));\r\n    }\r\n\r\n    someFilterApplied() {\r\n        if (this._filtersObject.firstFilter) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /* to draw filters */\r\n    getSelectors() {\r\n        return {\r\n            playerClass: {\r\n                text: 'player classes',\r\n                arr: this._playerClasses\r\n            },\r\n            cardSet: {\r\n                text: 'card sets',\r\n                arr: this._cardSets\r\n            },\r\n            type: {\r\n                text: 'types',\r\n                arr: this._types\r\n            },\r\n            faction: {\r\n                text: 'factions',\r\n                arr: this._factions\r\n            },\r\n            rarity: {\r\n                text: 'rarities',\r\n                arr: this._rarities\r\n            },\r\n            race: {\r\n                text: 'races',\r\n                arr: this._races\r\n            }\r\n        };\r\n    }\r\n\r\n    get playerClasses() {\r\n        return this._playerClasses;\r\n    }\r\n\r\n    get cardSets() {\r\n        return this._cardSets;\r\n    }\r\n\r\n    get types() {\r\n        return this._types;\r\n    }\r\n\r\n    get factions() {\r\n        return this._factions;\r\n    }\r\n\r\n    get rarities() {\r\n        return this._rarities;\r\n    }\r\n\r\n    get races() {\r\n        return this._races;\r\n    }\r\n\r\n    get patch() {\r\n        return this._patch;\r\n    }\r\n\r\n    get cardsShown() {\r\n        return this._cardsShown;\r\n    }\r\n\r\n    get decks() {\r\n        return this._decks.decks;\r\n    }\r\n\r\n    getDeck(id) {\r\n        return this._decks.decks.find(deck => deck.id === id);\r\n    }\r\n\r\n    addDeck(deck) {\r\n        this._decks.decks.push(deck);\r\n    }\r\n\r\n    removeDeck(deckId) {\r\n        this._decks.decks = this._decks.decks.filter(d => d.id !== deckId);\r\n    }\r\n\r\n    get activeDeck() {\r\n        return this._decks.activeDeck;\r\n    }\r\n\r\n    set activeDeck(id) {\r\n        this._decks.activeDeck = id;\r\n    }\r\n\r\n    get nCachedCards() {\r\n        return this._cardsCache.length + this._cardsNoImageCache.length;\r\n    }\r\n}","import { requestInfo } from './api';\r\nimport { DeckBuilder } from '../Classes/DeckBuilder';\r\n\r\n/**\r\n * Create and initialize Deck Board Object with info retrieved from the endpoint\r\n */\r\nexport async function initDB() {\r\n    const info = await requestInfo();\r\n    const db = new DeckBuilder(\r\n        info.classes,\r\n        info.sets,\r\n        info.types,\r\n        info.factions,\r\n        info.qualities,\r\n        info.races,\r\n        info.patch\r\n    );\r\n\r\n    return db;\r\n}","import tyrande from '../../assets/tyrande.png';\r\nimport error from '../../assets/error-bg.png';\r\nimport { Deck } from '../Classes/Deck';\r\n\r\n/* Draw filters based into info provided from deck board object */\r\nexport async function drawFilters(db) {\r\n    const selectors = db.getSelectors();\r\n    Object.entries(selectors).forEach(([k, v]) => {\r\n        const select = document.createElement('select');\r\n        select.classList.add('filter-select');\r\n        select.id = v.text.replace(/ +/g, '-') + '-select';\r\n        select.setAttribute('data-identifier', k);\r\n        const optionElement = document.createElement('option');\r\n        optionElement.setAttribute('value', '');\r\n        optionElement.textContent = 'All ' + v.text;\r\n        select.appendChild(optionElement);\r\n        v.arr.forEach(option => {\r\n            const optionElement = document.createElement('option');\r\n            optionElement.setAttribute('value', option);\r\n            optionElement.innerHTML = option;\r\n            select.appendChild(optionElement);\r\n        });\r\n        document.querySelector('#select-container').appendChild(select);\r\n    });\r\n\r\n    /* draw the current patch */\r\n    document.querySelector('#patch').innerHTML = 'Patch: ' + db.patch;\r\n}\r\n\r\n/* bind events to the filters elements */\r\nexport async function bindFilterEvents(db) {\r\n    /* foreach select bind his own event */\r\n    document.querySelector('#select-container').childNodes.forEach(select => {\r\n        const selectId = select.dataset.identifier;\r\n        select.addEventListener('change', async event => {\r\n            const cardsContainer = document.querySelector('#cardsContainer');\r\n            /* draw the loading effect */\r\n            cardsContainer.innerHTML = '<div class=\"loader\">Loading...</div>';\r\n            if (!event.target.value) {\r\n                /* if no value remove filer */\r\n                await db.removeFilter(selectId);\r\n            } else {\r\n                /* if value apply or modify filter */\r\n                await db.applyFilter(selectId, event.target.value);\r\n            }\r\n            /* after apply or remove filter draw cards */\r\n            drawCards(db);\r\n        });\r\n    });\r\n}\r\n\r\n/* draws the cards that has to be shown */\r\nexport function drawCards(db) {\r\n    const cardsContainer = document.querySelector('#cardsContainer');\r\n    cardsContainer.textContent = '';\r\n    /* if no cards to show and no filters applied draw starting page */\r\n    if (db.cardsShown.length === 0 && !db.someFilterApplied()) {\r\n        const noCardDiv = document.createElement('div');\r\n        noCardDiv.classList.add('no-cards-shown', 'mt-15vh');\r\n        const noCardImg = document.createElement('img');\r\n        noCardImg.src = tyrande;\r\n        noCardImg.classList.add('no-cards-shown-img');\r\n        const noCardText = document.createElement('h1');\r\n        noCardText.innerHTML = 'Select some filter to start';\r\n        noCardText.classList.add('no-cards-shown-text');\r\n        noCardDiv.appendChild(noCardImg);\r\n        noCardDiv.appendChild(noCardText);\r\n        cardsContainer.appendChild(noCardDiv);\r\n    }\r\n    /* if no cards to show and filters applied draw zero cards found page */\r\n    if (db.cardsShown.length === 0 && db.someFilterApplied()) {\r\n        const noCardDiv = document.createElement('div');\r\n        noCardDiv.classList.add('no-cards-shown', 'mt-10vh');\r\n        const noCardImg = document.createElement('img');\r\n        noCardImg.src = error;\r\n        noCardImg.classList.add('error-img');\r\n        const noCardText = document.createElement('h1');\r\n        noCardText.innerHTML = 'Ooops! Nothing to show . . .';\r\n        noCardText.classList.add('no-cards-shown-text');\r\n        noCardDiv.appendChild(noCardImg);\r\n        noCardDiv.appendChild(noCardText);\r\n        cardsContainer.appendChild(noCardDiv);\r\n    } else {\r\n        /* for each card found draw it */\r\n        db.cardsShown.forEach(async c => {\r\n            const cardDiv = document.createElement('div');\r\n            cardDiv.classList.add('individual-card-container');\r\n            const cardImg = document.createElement('img');\r\n            cardImg.classList.add('card-img');\r\n            cardImg.src = c.img;\r\n            cardImg.id = c.cardId;\r\n            /* add event that fires if image returns 404. That event removes node from DOM and triggers db.cardWithNoImg() */\r\n            cardImg.addEventListener('error', () => {\r\n                document\r\n                    .querySelector('#cardsContainer')\r\n                    .removeChild(document.querySelector('#' + c.cardId).parentElement);\r\n                db.cardWithNoImg(c);\r\n            });\r\n            /* add event on click at every image. */\r\n            cardImg.addEventListener('click', async event => {\r\n                /* if click specific image retrieve ALL info from API */\r\n                await db.getCardByCardId(event.target.id);\r\n                /* if there are some active deck add card to that deck */\r\n                if (db.activeDeck) {\r\n                    /* add card to deck and build DOM node */\r\n                    const deck = db.getDeck(db.activeDeck);\r\n                    deck.addCard(c);\r\n                    /* when card is added save the current decks status to browser */\r\n                    localStorage.setItem('HearthstoneDeckBuilderDecks', JSON.stringify(db.decks));\r\n                    const cardsList = document.querySelector('#cards-in-deck-list');\r\n                    const listElement = document.createElement('li');\r\n                    listElement.id = 'deck-listed-card-' + c.cardId;\r\n                    listElement.classList.add('deck-list-element');\r\n                    const name = document.createElement('span');\r\n                    name.classList.add('card-deck-name');\r\n                    name.textContent = c.name;\r\n                    /* add event listener to that node to show card info */\r\n                    name.addEventListener('click', () => {\r\n                        drawCardInfo(c);\r\n                    });\r\n                    /* build a delete icon  */\r\n                    const delContainer = document.createElement('span');\r\n                    delContainer.classList.add('delete-icon');\r\n                    const del = document.createElement('i');\r\n                    del.classList.add('material-icons');\r\n                    del.setAttribute('title', 'Delete');\r\n                    del.append(document.createTextNode('delete'));\r\n                    /* on click that icon delete node from DOM and remove card from active deck */\r\n                    del.addEventListener('click', () => {\r\n                        document.getElementById('deck-listed-card-' + c.cardId).remove();\r\n                        deck.removeCard(c.cardId);\r\n                        /* when card is removed save the current decks status to browser */\r\n                        localStorage.setItem('HearthstoneDeckBuilderDecks', JSON.stringify(db.decks));\r\n                    });\r\n                    delContainer.appendChild(del);\r\n                    listElement.appendChild(name);\r\n                    listElement.appendChild(delContainer);\r\n                    cardsList.appendChild(listElement);\r\n                } else {\r\n                    //alert('Select or create a deck before adding cards to it');\r\n                }\r\n                /* draw card info */\r\n                drawCardInfo(c);\r\n            });\r\n            cardImg.classList.add('card-img');\r\n            cardDiv.appendChild(cardImg);\r\n            cardsContainer.appendChild(cardDiv);\r\n        });\r\n    }\r\n    /* update the number of cards cached */\r\n    document.querySelector('#cached-cards').textContent = 'Cached Cards: ' + db.nCachedCards;\r\n}\r\n\r\n/* draw decks */\r\nexport async function drawDecks(db) {\r\n    const decksContainer = document.querySelector('#decks-container');\r\n    decksContainer.innerHTML = '';\r\n    /* deck title */\r\n    const titleDiv = document.createElement('div');\r\n    titleDiv.classList.add('deck-content-title');\r\n    const title = document.createElement('span');\r\n    title.textContent = 'My decks';\r\n    titleDiv.appendChild(title);\r\n    decksContainer.appendChild(titleDiv);\r\n    /* button to add deck */\r\n    const createDeckButton = document.createElement('button');\r\n    createDeckButton.classList.add('deck-section-button', 'button');\r\n    createDeckButton.id = 'create-deck-button';\r\n    createDeckButton.innerHTML = 'New deck';\r\n    /* on click create new deck */\r\n    createDeckButton.addEventListener('click', () => {\r\n        const deck = new Deck();\r\n        db.addDeck(deck);\r\n        /* on create deck save new deck status */\r\n        localStorage.setItem('HearthstoneDeckBuilderDecks', JSON.stringify(db.decks));\r\n        const deckDiv = document.createElement('div');\r\n        deckDiv.classList.add('deck-element');\r\n        deckDiv.id = deck.id;\r\n        const deckTitle = document.createElement('span');\r\n        deckTitle.classList.add('deck-title-element');\r\n        deckTitle.textContent = deck.name;\r\n        /* on click set that deck to active deck */\r\n        deckTitle.addEventListener('click', () => {\r\n            db.activeDeck = deck.id;\r\n            drawActiveDeck(db);\r\n        });\r\n        /* make a delete deck icon */\r\n        const delContainer = document.createElement('span');\r\n        delContainer.classList.add('delete-icon');\r\n        const del = document.createElement('i');\r\n        del.classList.add('material-icons');\r\n        del.setAttribute('title', 'Delete');\r\n        del.append(document.createTextNode('delete'));\r\n        /* on click remove node from DOM and remove deck from deck builder */\r\n        del.addEventListener('click', () => {\r\n            document.getElementById(deck.id).remove();\r\n            db.removeDeck(deck.id);\r\n            /* save new decks status */\r\n            localStorage.setItem('HearthstoneDeckBuilderDecks', JSON.stringify(db.decks));\r\n        });\r\n        delContainer.appendChild(del);\r\n\r\n        deckDiv.appendChild(deckTitle);\r\n        deckDiv.appendChild(delContainer);\r\n        decksContainer.insertBefore(deckDiv, createDeckButton);\r\n    });\r\n    /* if there are others decks draw them to de DOM too */\r\n    db.decks.forEach(deck => {\r\n        const deckDiv = document.createElement('div');\r\n        deckDiv.classList.add('deck-element');\r\n        deckDiv.id = deck.id;\r\n        const deckTitle = document.createElement('span');\r\n        deckTitle.classList.add('deck-title-element');\r\n        deckTitle.textContent = deck.name;\r\n        deckTitle.addEventListener('click', () => {\r\n            db.activeDeck = deck.id;\r\n            drawActiveDeck(db);\r\n        });\r\n        const delContainer = document.createElement('span');\r\n        delContainer.classList.add('delete-icon');\r\n        const del = document.createElement('i');\r\n        del.classList.add('material-icons');\r\n        del.setAttribute('title', 'Delete');\r\n        del.append(document.createTextNode('delete'));\r\n        del.addEventListener('click', () => {\r\n            document.getElementById(deck.id).remove();\r\n            db.removeDeck(deck.id);\r\n            localStorage.setItem('HearthstoneDeckBuilderDecks', JSON.stringify(db.decks));\r\n        });\r\n        delContainer.appendChild(del);\r\n\r\n        deckDiv.appendChild(deckTitle);\r\n        deckDiv.appendChild(delContainer);\r\n        decksContainer.appendChild(deckDiv);\r\n    });\r\n    decksContainer.appendChild(createDeckButton);\r\n}\r\n\r\n/* draw active deck */\r\nfunction drawActiveDeck(db) {\r\n    const decksContainer = document.querySelector('#decks-container');\r\n    decksContainer.innerHTML = '';\r\n    /* get active deck */\r\n    const deck = db.getDeck(db.activeDeck);\r\n    /* draw title */\r\n    const titleDiv = document.createElement('div');\r\n    titleDiv.classList.add('deck-content-title');\r\n    const title = document.createElement('span');\r\n    /* make it editable so users can change name of the deck */\r\n    title.contentEditable = true;\r\n    title.classList.add('editable', 'deck-title-span');\r\n    title.textContent = deck.name;\r\n    titleDiv.appendChild(title);\r\n    /* on focus out save name */\r\n    title.addEventListener('focusout', event => {\r\n        if (event.target.textContent) {\r\n            deck.name = event.target.textContent.substring(0, 15).replace(/[^a-z0-9 ]/gi, '');\r\n        }\r\n        title.textContent = deck.name;\r\n        localStorage.setItem('HearthstoneDeckBuilderDecks', JSON.stringify(db.decks));\r\n    });\r\n    decksContainer.appendChild(titleDiv);\r\n    const cardsInDeckContainer = document.createElement('div');\r\n    const cardsInDeck = document.createElement('ul');\r\n    cardsInDeck.id = 'cards-in-deck-list';\r\n    cardsInDeck.classList.add('cards-in-deck-list');\r\n    /* for each card already added to deck draw it  */\r\n    deck.cards.forEach(card => {\r\n        const listElement = document.createElement('li');\r\n        listElement.id = 'deck-listed-card-' + card.cardId;\r\n        listElement.classList.add('deck-list-element');\r\n        const name = document.createElement('span');\r\n        name.classList.add('card-deck-name');\r\n        name.textContent = card.name;\r\n        /* on click the card show info */\r\n        name.addEventListener('click', () => {\r\n            drawCardInfo(card);\r\n        });\r\n        /* every card has his own delete icon */\r\n        const delContainer = document.createElement('span');\r\n        delContainer.classList.add('delete-icon');\r\n        const del = document.createElement('i');\r\n        del.classList.add('material-icons');\r\n        del.setAttribute('title', 'Delete');\r\n        del.append(document.createTextNode('delete'));\r\n        del.addEventListener('click', () => {\r\n            document.getElementById('deck-listed-card-' + card.cardId).remove();\r\n            deck.removeCard(card.cardId);\r\n            localStorage.setItem('HearthstoneDeckBuilderDecks', JSON.stringify(db.decks));\r\n        });\r\n        delContainer.appendChild(del);\r\n        listElement.appendChild(name);\r\n        listElement.appendChild(delContainer);\r\n        cardsInDeck.appendChild(listElement);\r\n    });\r\n    cardsInDeckContainer.appendChild(cardsInDeck);\r\n    decksContainer.appendChild(cardsInDeckContainer);\r\n    /* go back button to return to my decks */\r\n    const deckFooter = document.createElement('div');\r\n    const backLink = document.createElement('button');\r\n    backLink.classList.add('deck-section-button', 'button');\r\n    backLink.id = 'back-deck-button';\r\n    backLink.innerHTML = 'Back';\r\n    backLink.addEventListener('click', () => {\r\n        db.activeDeck = undefined;\r\n        drawDecks(db);\r\n    });\r\n    deckFooter.appendChild(backLink);\r\n    decksContainer.appendChild(deckFooter);\r\n}\r\n\r\n/* draw card info */\r\nexport function drawCardInfo(card) {\r\n    const cardInfoContainer = document.querySelector('#card-info');\r\n    cardInfoContainer.innerHTML = '';\r\n    /* title */\r\n    const titleDiv = document.createElement('div');\r\n    titleDiv.classList.add('card-info-title');\r\n    const title = document.createElement('span');\r\n    title.textContent = 'Card Info';\r\n    titleDiv.appendChild(title);\r\n    cardInfoContainer.appendChild(titleDiv);\r\n\r\n    /* for each property set of that card draw it */\r\n    Object.entries(card.getAllProperties()).forEach(([k, v]) => {\r\n        const contentDiv = document.createElement('div');\r\n        contentDiv.classList.add('card-info-property');\r\n        contentDiv.innerHTML = '<span class=\"strong\">' + k + ':</span> ' + v;\r\n        cardInfoContainer.appendChild(contentDiv);\r\n    });\r\n}","import { initDB } from './utils/initDB';\r\n\r\nimport { drawFilters, bindFilterEvents, drawCards, drawDecks } from './utils/views';\r\n\r\n(async() => {\r\n    const db = await initDB();\r\n    await drawFilters(db);\r\n    await drawDecks(db);\r\n    await bindFilterEvents(db);\r\n    drawCards(db);\r\n\r\n    console.log(db);\r\n})();","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}