parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"SJQB":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ENDPOINTS=void 0;const t={INFO:"https://omgvamp-hearthstone-v1.p.rapidapi.com/info",CARD_BY_ID:"https://omgvamp-hearthstone-v1.p.rapidapi.com/cards/",CARDS_BY_CLASS:"https://omgvamp-hearthstone-v1.p.rapidapi.com/cards/classes/",CARDS_BY_SET:"https://omgvamp-hearthstone-v1.p.rapidapi.com/cards/sets/",CARDS_BY_TYPE:"https://omgvamp-hearthstone-v1.p.rapidapi.com/cards/types/",CARDS_BY_FACTION:"https://omgvamp-hearthstone-v1.p.rapidapi.com/cards/factions/",CARDS_BY_QUALITY:"https://omgvamp-hearthstone-v1.p.rapidapi.com/cards/qualities/",CARDS_BY_RACE:"https://omgvamp-hearthstone-v1.p.rapidapi.com/cards/races/",MODIFIERS:"",IMG:"https://art.hearthstonejson.com/v1/render/latest/enUS/256x/"};exports.ENDPOINTS=t;
},{}],"uEMP":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.requestInfo=n,exports.requestCardByCardId=s,exports.requestCardsByPlayerClass=o,exports.requestCardsByCardSet=c,exports.requestCardsByType=i,exports.requestCardsByFaction=u,exports.requestCardsByRarity=p,exports.requestCardsByRace=d;var e=require("./endpoints");const t="omgvamp-hearthstone-v1.p.rapidapi.com",a="f6fe973a55mshb2cdb6e42332b71p1b12ccjsndf391a414a74";async function r(r){const n=new Headers;n.append("x-rapidapi-host",t),n.append("x-rapidapi-key",a);try{const t=await fetch(r+e.ENDPOINTS.MODIFIERS,{method:"GET",headers:n});if(t.ok){return await t.json()}return t.ok}catch(s){console.log("fetch failed",s)}}async function n(){return await r(e.ENDPOINTS.INFO)}async function s(t){return(await r(e.ENDPOINTS.CARD_BY_ID+t)).pop()}async function o(t){return await r(e.ENDPOINTS.CARDS_BY_CLASS+t)}async function c(t){return await r(e.ENDPOINTS.CARDS_BY_SET+t)}async function i(t){return await r(e.ENDPOINTS.CARDS_BY_TYPE+t)}async function u(t){return await r(e.ENDPOINTS.CARDS_BY_FACTION+t)}async function p(t){return await r(e.ENDPOINTS.CARDS_BY_QUALITY+t)}async function d(t){return await r(e.ENDPOINTS.CARDS_BY_RACE+t)}
},{"./endpoints":"SJQB"}],"wlYM":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Card=void 0;var t=require("../utils/endpoints");class e{constructor(t,e,i,s,r,a,h){this._cardId=t,this._cardSet=e,this._type=i,this._faction=s,this._rarity=r,this._race=a,this._img=this._buildImgUrl(t),this._playerClass=h,this._name=void 0,this._cost=void 0,this._attack=void 0,this._health=void 0,this._text=void 0,this._flavor=void 0,this._artist=void 0,this._collectible=void 0,this._elite=void 0,this._locale=void 0,this._infoCompleted=!1}_buildImgUrl(e){return t.ENDPOINTS.IMG+e+".png"}get infoCompleted(){return this._infoCompleted}set infoCompleted(t){this._infoCompleted=t}get cardId(){return this._cardId}get playerClass(){return this._playerClass}get cardSet(){return this._cardSet}get type(){return this._type}get faction(){return this._faction}set faction(t){this._faction=t}get rarity(){return this._rarity}set rarity(t){this._rarity=t}get race(){return this._race}set race(t){this._race=t}get img(){return this._img}set img(t){this._img=t}get name(){return this._name}set name(t){this._name=t}get cost(){return this._cost}set cost(t){this._cost=t}get attack(){return this._attack}set attack(t){this._attack=t}get health(){return this._health}set health(t){this._health=t}get text(){return this._text}set text(t){this._text=t}get flavor(){return this._flavor}set flavor(t){this._flavor=t}get artist(){return this._artist}set artist(t){this._artist=t}get collectible(){return this._collectible}set collectible(t){this._collectible=t}get elite(){return this._elite}set elite(t){this._elite=t}get locale(){return this._locale}set locale(t){this._locale=t}getAllProperties(){const t={};return this._cardId&&(t["Card id"]=this._cardId),this._playerClass&&(t["Player class"]=this._playerClass),this._cardSet&&(t["Card set"]=this._cardSet),this._type&&(t.Type=this._type),this._faction&&(t.Faction=this._faction),this._rarity&&(t.Rarity=this._rarity),this._race&&(t.Race=this._race),this._name&&(t.Name=this._name),this._cost&&(t.Cost=this._cost),this._attack&&(t.Attack=this._attack),this._health&&(t.Health=this._health),this._text&&(t.Text=this._text),this._flavor&&(t.Flavor=this._flavor),this._artist&&(t.Artist=this._artist),this._elite&&(t.Elite=this._elite),t}}exports.Card=e;
},{"../utils/endpoints":"SJQB"}],"m7pI":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Deck=void 0;class e{constructor(){this._id=this._uuidv4(),this._name="New deck",this._cards=[]}_uuidv4(){return([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,e=>(e^crypto.getRandomValues(new Uint8Array(1))[0]&15>>e/4).toString(16))}get id(){return this._id}get name(){return this._name}set name(e){this._name=e}get cards(){return this._cards}addCard(e){this._cards.push(e)}removeCard(e){this._cards=this._cards.filter(t=>t.cardId!==e)}get nCards(){return this._cards.length}}exports.Deck=e;
},{}],"t7MF":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DeckBuilder=void 0;var e=require("../utils/api"),t=require("../Classes/Card"),a=require("./Deck");class r{constructor(e,t,a,r,s,i,c){this._playerClasses=e,this._cardSets=t,this._types=a,this._factions=r,this._rarities=s,this._races=i,this._patch=c,this._cardsCache=[],this._cardsNoImageCache=[],this._callsDone={cardId:[],playerClass:[],cardSet:[],type:[],faction:[],rarity:[],race:[]},this._cardsShown=[],this._decks={activeDeck:void 0,decks:[]},this._filtersObject={filtersApplied:{playerClass:!1,cardSet:!1,type:!1,faction:!1,rarity:!1,race:!1},firstFilter:void 0},this._getBrowserInfo()}_getBrowserInfo(){if(JSON.parse(localStorage.getItem("HearthstoneDeckBuilderPatch"))===this._patch){const e=JSON.parse(localStorage.getItem("HearthstoneDeckBuilderDecks")),r=JSON.parse(localStorage.getItem("HearthstoneDeckBuilderCallsDone")),s=JSON.parse(localStorage.getItem("HearthstoneDeckBuilderCardsNoImageCache")),i=JSON.parse(localStorage.getItem("HearthstoneDeckBuilderCardsCache"));if(r&&i&&s&&(this._callsDone=r,i.forEach(e=>{const a=new t.Card(e._cardId,e._cardSet,e._type,e._faction,e._rarity,e._race,e._playerClass);a.name=e._name,a.cost=e._cost,a.attack=e._attack,a.health=e._health,a.text=e._text,a.flavor=e._flavor,a.artist=e._artist,a.collectible=e._collectible,a.elite=e._elite,a.locale=e._locale,a.infoCompleted=e._infoCompleted,this._cardsCache.push(a)}),s.forEach(e=>{const a=new t.Card(e._cardId,e._cardSet,e._type,e._faction,e._rarity,e._race,e._playerClass);a.img="no-img-available",a.name=e._name,a.cost=e._cost,a.attack=e._attack,a.health=e._health,a.text=e._text,a.flavor=e._flavor,a.artist=e._artist,a.collectible=e._collectible,a.elite=e._elite,a.locale=e._locale,a.infoCompleted=e._infoCompleted,this._cardsNoImageCache.push(a)}),e))for(const t of e){const e=new a.Deck;e.name=t._name;for(const a of t._cards){const t=this._cardsCache.find(e=>e.cardId===a._cardId);e.addCard(t)}this._decks.decks.push(e)}}else localStorage.setItem("HearthstoneDeckBuilderPatch",JSON.stringify(this._patch)),localStorage.removeItem("HearthstoneDeckBuilderCallsDone"),localStorage.removeItem("HearthstoneDeckBuilderDecks"),localStorage.removeItem("HearthstoneDeckBuilderCardsNoImageCache"),localStorage.removeItem("HearthstoneDeckBuilderCardsCache")}async _rebuildCardsShownArray(a,r){if(this._filtersObject.filtersApplied[a]=r,!this._filtersObject.firstFilter){let e=!1;Object.entries(this._filtersObject.filtersApplied).forEach(([t,r])=>{t!==a&&!1!==r&&(e||(this._filtersObject.firstFilter=t,this._callsDone[t].find(e=>e===r)&&(e=!0)))})}if(this._cardsShown=[],this._filtersObject.firstFilter){const a=Object.entries(this._filtersObject.filtersApplied).filter(e=>!1!==e[1]),r=a.find(([e])=>e===this._filtersObject.firstFilter);if(r&&(a.splice(a.indexOf(r),1),a.unshift(r)),a&&this.someFilterApplied){let r=!1;for(const s of a){const a=s[0],i=s[1];if(!1!==i)if(0!==this._cardsShown.length||r)this._cardsShown=this._cardsShown.filter(e=>e[a]===i);else{if(!this._callsDone[a].find(e=>e===i)){let r;switch(a){case"playerClass":r=await(0,e.requestCardsByPlayerClass)(i),this._callsDone.playerClass.push(i);break;case"cardSet":r=await(0,e.requestCardsByCardSet)(i),this._callsDone.cardSet.push(i);break;case"type":r=await(0,e.requestCardsByType)(i),this._callsDone.type.push(i);break;case"faction":r=await(0,e.requestCardsByFaction)(i),this._callsDone.faction.push(i);break;case"rarity":r=await(0,e.requestCardsByRarity)(i),this._callsDone.rarity.push(i);break;case"race":r=await(0,e.requestCardsByRace)(i),this._callsDone.race.push(i)}r&&r.forEach(e=>{this._cardsCache.find(t=>t.cardId===e.cardId)||this._cardsCache.push(new t.Card(e.cardId,e.cardSet,e.type,e.faction,e.rarity,e.race,e.playerClass))}),localStorage.setItem("HearthstoneDeckBuilderCallsDone",JSON.stringify(this._callsDone)),localStorage.setItem("HearthstoneDeckBuilderCardsNoImageCache",JSON.stringify(this._cardsNoImageCache)),localStorage.setItem("HearthstoneDeckBuilderCardsCache",JSON.stringify(this._cardsCache))}this._cardsShown=this._cardsCache.filter(e=>e[a]===i),r=!0}}}}}async _applyPlayerClassFilter(a){if(!this._callsDone.playerClass.find(e=>e===a)&&!this._filtersObject.firstFilter){const r=await(0,e.requestCardsByPlayerClass)(a);r&&r.forEach(e=>{this._cardsCache.find(t=>t.cardId===e.cardId)||this._cardsCache.push(new t.Card(e.cardId,e.cardSet,e.type,e.faction,e.rarity,e.race,e.playerClass))}),this._callsDone.playerClass.push(a)}this._filtersObject.firstFilter||(this._filtersObject.firstFilter="playerClass"),await this._rebuildCardsShownArray("playerClass",a)}async _applyCardSetFilter(a){if(!this._callsDone.cardSet.find(e=>e===a)&&!this._filtersObject.firstFilter){const r=await(0,e.requestCardsByCardSet)(a);r&&r.forEach(e=>{this._cardsCache.find(t=>t.cardId===e.cardId)||this._cardsCache.push(new t.Card(e.cardId,e.cardSet,e.type,e.faction,e.rarity,e.race,e.playerClass))}),this._callsDone.cardSet.push(a)}this._filtersObject.firstFilter||(this._filtersObject.firstFilter="cardSet"),await this._rebuildCardsShownArray("cardSet",a)}async _applyTypeFilter(a){if(!this._callsDone.type.find(e=>e===a)&&!this._filtersObject.firstFilter){const r=await(0,e.requestCardsByType)(a);r&&r.forEach(e=>{this._cardsCache.find(t=>t.cardId===e.cardId)||this._cardsCache.push(new t.Card(e.cardId,e.cardSet,e.type,e.faction,e.rarity,e.race,e.playerClass))}),this._callsDone.type.push(a)}this._filtersObject.firstFilter||(this._filtersObject.firstFilter="type"),await this._rebuildCardsShownArray("type",a)}async _applyFactionFilter(a){if(!this._callsDone.faction.find(e=>e===a)&&!this._filtersObject.firstFilter){const r=await(0,e.requestCardsByFaction)(a);r&&r.forEach(e=>{const a=this._cardsCache.find(t=>t.cardId===e.cardId);a?this._cardsCache.find(e=>e.cardId===a.cardId).faction=e.faction:this._cardsCache.push(new t.Card(e.cardId,e.cardSet,e.type,e.faction,e.rarity,e.race,e.playerClass))}),this._callsDone.faction.push(a)}this._filtersObject.firstFilter||(this._filtersObject.firstFilter="faction"),await this._rebuildCardsShownArray("faction",a)}async _applyRarityFilter(a){if(!this._callsDone.rarity.find(e=>e===a)&&!this._filtersObject.firstFilter){const r=await(0,e.requestCardsByRarity)(a);r&&r.forEach(e=>{const a=this._cardsCache.find(t=>t.cardId===e.cardId);a?this._cardsCache.find(e=>e.cardId===a.cardId).rarity=e.rarity:this._cardsCache.push(new t.Card(e.cardId,e.cardSet,e.type,e.faction,e.rarity,e.race,e.playerClass))}),this._callsDone.rarity.push(a)}this._filtersObject.firstFilter||(this._filtersObject.firstFilter="rarity"),await this._rebuildCardsShownArray("rarity",a)}async _applyRaceFilter(a){if(!this._callsDone.race.find(e=>e===a)&&!this._filtersObject.firstFilter){const r=await(0,e.requestCardsByRace)(a);r&&r.forEach(e=>{const a=this._cardsCache.find(t=>t.cardId===e.cardId);a?this._cardsCache.find(e=>e.cardId===a.cardId).race=e.race:this._cardsCache.push(new t.Card(e.cardId,e.cardSet,e.type,e.faction,e.rarity,e.race,e.playerClass))}),this._callsDone.race.push(a)}this._filtersObject.firstFilter||(this._filtersObject.firstFilter="race"),await this._rebuildCardsShownArray("race",a)}async getCardByCardId(a){const r=this._cardsCache.find(e=>e.cardId===a);if(r&&r.infoCompleted)return r;{const r=await(0,e.requestCardByCardId)(a);if(r){const e=this._cardsCache.find(e=>e.cardId===r.cardId);if(e)return e.faction=r.faction,e.rarity=r.rarity,e.race=r.race,e.name=r.name,e.cost=r.cost,e.attack=r.attack,e.health=r.health,e.text=r.text,e.flavor=r.flavor,e.artist=r.artist,e.collectible=r.collectibl,e.elite=r.elite,e.locale=r.locale,e.infoCompleted=!0,localStorage.setItem("HearthstoneDeckBuilderCardsCache",JSON.stringify(this._cardsCache)),e;{const e=new t.Card(r.cardId,r.cardSet,r.type,r.faction,r.rarity,r.race,r.playerClass);return e.name=r.name,e.cost=r.cost,e.attack=r.attack,e.health=r.health,e.text=r.text,e.flavor=r.flavor,e.artist=r.artist,e.collectible=r.collectibl,e.elite=r.elite,e.locale=r.locale,e.infoCompleted=!0,this._cardsCache.push(e),localStorage.setItem("HearthstoneDeckBuilderCardsCache",JSON.stringify(this._cardsCache)),e}}}}async applyFilter(e,t){switch(e){case"playerClass":await this._applyPlayerClassFilter(t);break;case"cardSet":await this._applyCardSetFilter(t);break;case"type":await this._applyTypeFilter(t);break;case"faction":await this._applyFactionFilter(t);break;case"rarity":await this._applyRarityFilter(t);break;case"race":await this._applyRaceFilter(t);break;default:return-1}return localStorage.setItem("HearthstoneDeckBuilderCallsDone",JSON.stringify(this._callsDone)),localStorage.setItem("HearthstoneDeckBuilderCardsNoImageCache",JSON.stringify(this._cardsNoImageCache)),localStorage.setItem("HearthstoneDeckBuilderCardsCache",JSON.stringify(this._cardsCache)),this._cardsShown}async removeFilter(e){this._filtersObject.filtersApplied[e]&&(this._filtersObject.firstFilter===e&&(this._filtersObject.firstFilter=void 0),await this._rebuildCardsShownArray(e,!1))}cardWithNoImg(e){this._cardsShown=this._cardsShown.filter(t=>t.cardId!==e.cardId),this._cardsCache=this._cardsCache.filter(t=>t.cardId!==e.cardId),e.img="no-img-available",this._cardsNoImageCache.push(e),localStorage.setItem("HearthstoneDeckBuilderCardsNoImageCache",JSON.stringify(this._cardsNoImageCache)),localStorage.setItem("HearthstoneDeckBuilderCardsCache",JSON.stringify(this._cardsCache))}someFilterApplied(){return!!this._filtersObject.firstFilter}getSelectors(){return{playerClass:{text:"player classes",arr:this._playerClasses},cardSet:{text:"card sets",arr:this._cardSets},type:{text:"types",arr:this._types},faction:{text:"factions",arr:this._factions},rarity:{text:"rarities",arr:this._rarities},race:{text:"races",arr:this._races}}}get playerClasses(){return this._playerClasses}get cardSets(){return this._cardSets}get types(){return this._types}get factions(){return this._factions}get rarities(){return this._rarities}get races(){return this._races}get patch(){return this._patch}get cardsShown(){return this._cardsShown}get decks(){return this._decks.decks}getDeck(e){return this._decks.decks.find(t=>t.id===e)}addDeck(e){this._decks.decks.push(e)}removeDeck(e){this._decks.decks=this._decks.decks.filter(t=>t.id!==e)}get activeDeck(){return this._decks.activeDeck}set activeDeck(e){this._decks.activeDeck=e}get nCachedCards(){return this._cardsCache.length+this._cardsNoImageCache.length}}exports.DeckBuilder=r;
},{"../utils/api":"uEMP","../Classes/Card":"wlYM","./Deck":"m7pI"}],"Qcsc":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.initDB=t;var e=require("./api"),s=require("../Classes/DeckBuilder");async function t(){const t=await(0,e.requestInfo)();return new s.DeckBuilder(t.classes,t.sets,t.types,t.factions,t.qualities,t.races,t.patch)}
},{"./api":"uEMP","../Classes/DeckBuilder":"t7MF"}],"zHew":[function(require,module,exports) {
module.exports="https://rogermedico.github.io/hdb/tyrande.7e4c3043.png";
},{}],"STXT":[function(require,module,exports) {
module.exports="https://rogermedico.github.io/hdb/error-bg.7204c021.png";
},{}],"FEm1":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.drawFilters=c,exports.bindFilterEvents=a,exports.drawCards=s,exports.drawDecks=i,exports.drawCardInfo=o;var e=n(require("../../assets/tyrande.png")),t=n(require("../../assets/error-bg.png")),d=require("../Classes/Deck");function n(e){return e&&e.__esModule?e:{default:e}}async function c(e){const t=e.getSelectors();Object.entries(t).forEach(([e,t])=>{const d=document.createElement("select");d.classList.add("filter-select"),d.id=t.text.replace(/ +/g,"-")+"-select",d.setAttribute("data-identifier",e);const n=document.createElement("option");n.setAttribute("value",""),n.textContent="All "+t.text,d.appendChild(n),t.arr.forEach(e=>{const t=document.createElement("option");t.setAttribute("value",e),t.innerHTML=e,d.appendChild(t)}),document.querySelector("#select-container").appendChild(d)}),document.querySelector("#patch").innerHTML="Patch: "+e.patch}async function a(e){document.querySelector("#select-container").childNodes.forEach(t=>{const d=t.dataset.identifier;t.addEventListener("change",async t=>{document.querySelector("#cardsContainer").innerHTML='<div class="loader">Loading...</div>',t.target.value?await e.applyFilter(d,t.target.value):await e.removeFilter(d),s(e)})})}function s(d){const n=document.querySelector("#cardsContainer");if(n.textContent="",0===d.cardsShown.length&&!d.someFilterApplied()){const t=document.createElement("div");t.classList.add("no-cards-shown","mt-15vh");const d=document.createElement("img");d.src=e.default,d.classList.add("no-cards-shown-img");const c=document.createElement("h1");c.innerHTML="Select some filter to start",c.classList.add("no-cards-shown-text"),t.appendChild(d),t.appendChild(c),n.appendChild(t)}if(0===d.cardsShown.length&&d.someFilterApplied()){const e=document.createElement("div");e.classList.add("no-cards-shown","mt-10vh");const d=document.createElement("img");d.src=t.default,d.classList.add("error-img");const c=document.createElement("h1");c.innerHTML="Ooops! Nothing to show . . .",c.classList.add("no-cards-shown-text"),e.appendChild(d),e.appendChild(c),n.appendChild(e)}else d.cardsShown.forEach(async e=>{const t=document.createElement("div");t.classList.add("individual-card-container");const c=document.createElement("img");c.classList.add("card-img"),c.src=e.img,c.id=e.cardId,c.addEventListener("error",()=>{document.querySelector("#cardsContainer").removeChild(document.querySelector("#"+e.cardId).parentElement),d.cardWithNoImg(e)}),c.addEventListener("click",async t=>{if(await d.getCardByCardId(t.target.id),d.activeDeck){const t=d.getDeck(d.activeDeck);t.addCard(e),localStorage.setItem("HearthstoneDeckBuilderDecks",JSON.stringify(d.decks));const n=document.querySelector("#cards-in-deck-list"),c=document.createElement("li");c.id="deck-listed-card-"+e.cardId,c.classList.add("deck-list-element");const a=document.createElement("span");a.classList.add("card-deck-name"),a.textContent=e.name,a.addEventListener("click",()=>{o(e)});const s=document.createElement("span");s.classList.add("delete-icon");const i=document.createElement("i");i.classList.add("material-icons"),i.setAttribute("title","Delete"),i.append(document.createTextNode("delete")),i.addEventListener("click",()=>{document.getElementById("deck-listed-card-"+e.cardId).remove(),t.removeCard(e.cardId),localStorage.setItem("HearthstoneDeckBuilderDecks",JSON.stringify(d.decks))}),s.appendChild(i),c.appendChild(a),c.appendChild(s),n.appendChild(c)}o(e)}),c.classList.add("card-img"),t.appendChild(c),n.appendChild(t)});document.querySelector("#cached-cards").textContent="Cached Cards: "+d.nCachedCards}async function i(e){const t=document.querySelector("#decks-container");t.innerHTML="";const n=document.createElement("div");n.classList.add("deck-content-title");const c=document.createElement("span");c.textContent="My decks",n.appendChild(c),t.appendChild(n);const a=document.createElement("button");a.classList.add("deck-section-button","button"),a.id="create-deck-button",a.innerHTML="New deck",a.addEventListener("click",()=>{const n=new d.Deck;e.addDeck(n),localStorage.setItem("HearthstoneDeckBuilderDecks",JSON.stringify(e.decks));const c=document.createElement("div");c.classList.add("deck-element"),c.id=n.id;const s=document.createElement("span");s.classList.add("deck-title-element"),s.textContent=n.name,s.addEventListener("click",()=>{e.activeDeck=n.id,r(e)});const i=document.createElement("span");i.classList.add("delete-icon");const o=document.createElement("i");o.classList.add("material-icons"),o.setAttribute("title","Delete"),o.append(document.createTextNode("delete")),o.addEventListener("click",()=>{document.getElementById(n.id).remove(),e.removeDeck(n.id),localStorage.setItem("HearthstoneDeckBuilderDecks",JSON.stringify(e.decks))}),i.appendChild(o),c.appendChild(s),c.appendChild(i),t.insertBefore(c,a)}),e.decks.forEach(d=>{const n=document.createElement("div");n.classList.add("deck-element"),n.id=d.id;const c=document.createElement("span");c.classList.add("deck-title-element"),c.textContent=d.name,c.addEventListener("click",()=>{e.activeDeck=d.id,r(e)});const a=document.createElement("span");a.classList.add("delete-icon");const s=document.createElement("i");s.classList.add("material-icons"),s.setAttribute("title","Delete"),s.append(document.createTextNode("delete")),s.addEventListener("click",()=>{document.getElementById(d.id).remove(),e.removeDeck(d.id),localStorage.setItem("HearthstoneDeckBuilderDecks",JSON.stringify(e.decks))}),a.appendChild(s),n.appendChild(c),n.appendChild(a),t.appendChild(n)}),t.appendChild(a)}function r(e){const t=document.querySelector("#decks-container");t.innerHTML="";const d=e.getDeck(e.activeDeck),n=document.createElement("div");n.classList.add("deck-content-title");const c=document.createElement("span");c.contentEditable=!0,c.classList.add("editable","deck-title-span"),c.textContent=d.name,n.appendChild(c),c.addEventListener("focusout",t=>{t.target.textContent&&(d.name=t.target.textContent.substring(0,15).replace(/[^a-z0-9 ]/gi,"")),c.textContent=d.name,localStorage.setItem("HearthstoneDeckBuilderDecks",JSON.stringify(e.decks))}),t.appendChild(n);const a=document.createElement("div"),s=document.createElement("ul");s.id="cards-in-deck-list",s.classList.add("cards-in-deck-list"),d.cards.forEach(t=>{const n=document.createElement("li");n.id="deck-listed-card-"+t.cardId,n.classList.add("deck-list-element");const c=document.createElement("span");c.classList.add("card-deck-name"),c.textContent=t.name,c.addEventListener("click",()=>{o(t)});const a=document.createElement("span");a.classList.add("delete-icon");const i=document.createElement("i");i.classList.add("material-icons"),i.setAttribute("title","Delete"),i.append(document.createTextNode("delete")),i.addEventListener("click",()=>{document.getElementById("deck-listed-card-"+t.cardId).remove(),d.removeCard(t.cardId),localStorage.setItem("HearthstoneDeckBuilderDecks",JSON.stringify(e.decks))}),a.appendChild(i),n.appendChild(c),n.appendChild(a),s.appendChild(n)}),a.appendChild(s),t.appendChild(a);const r=document.createElement("div"),l=document.createElement("button");l.classList.add("deck-section-button","button"),l.id="back-deck-button",l.innerHTML="Back",l.addEventListener("click",()=>{e.activeDeck=void 0,i(e)}),r.appendChild(l),t.appendChild(r)}function o(e){const t=document.querySelector("#card-info");t.innerHTML="";const d=document.createElement("div");d.classList.add("card-info-title");const n=document.createElement("span");n.textContent="Card Info",d.appendChild(n),t.appendChild(d),Object.entries(e.getAllProperties()).forEach(([e,d])=>{const n=document.createElement("div");n.classList.add("card-info-property"),n.innerHTML='<span class="strong">'+e+":</span> "+d,t.appendChild(n)})}
},{"../../assets/tyrande.png":"zHew","../../assets/error-bg.png":"STXT","../Classes/Deck":"m7pI"}],"Focm":[function(require,module,exports) {
"use strict";var i=require("./utils/initDB"),a=require("./utils/views");(async()=>{const t=await(0,i.initDB)();await(0,a.drawFilters)(t),await(0,a.drawDecks)(t),await(0,a.bindFilterEvents)(t),(0,a.drawCards)(t),console.log(t)})();
},{"./utils/initDB":"Qcsc","./utils/views":"FEm1"}]},{},["Focm"], null)
//# sourceMappingURL=https://rogermedico.github.io/hdb/src.38915e5d.js.map